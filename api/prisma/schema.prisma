generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admins {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  master    Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Users {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String
  password    String?
  cpf         String   @unique
  birthday    DateTime @default(now())
  description String?
  image       String   @default("")
  createdAt   DateTime @default(now())
}

model Companies {
  id        Int      @id @default(autoincrement())
  name      String
  cnpj      String   @unique
  address   String
  color     String
  image     String
  createdAt DateTime @default(now())
}

model CompaniesUsers {
  id          Int       @id @default(autoincrement())
  companyId   Int       @map("company_id")
  userId      Int       @map("user_id")
  role        Int
  department  Int
  permissions Json
  lastAccess  DateTime?
  createdAt   DateTime  @default(now())

  @@map("companies_users")
}

model CompaniesDepartments {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  name        String
  description String
  salary      Float
  createdAt   DateTime @default(now())

  @@map("companies_departments")
}

model CompaniesRoles {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  departmentId Int      @map("department_id")
  name         String
  salary       Float
  createdAt    DateTime @default(now())

  @@map("companies_roles")
}

model CompaniesFeedbacks {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  userId    Int      @map("user_id")
  content   String
  score     Int
  createdAt DateTime @default(now())

  @@map("companies_feedbacks")
}

model CompaniesTasks {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  userId      Int      @map("user_id")
  title       String
  description String
  status      String
  dueDate     DateTime @map("due_date")
  createdAt   DateTime @default(now())
}

model CompaniesChat {
  id         Int      @id @default(autoincrement())
  companyId  Int      @map("company_id")
  userId     Int      @map("user_id")
  receiverId Int      @map("receiver_id")
  message    String
  createdAt  DateTime @default(now())
}

model PasswordResets {
  id        Int      @id @default(autoincrement())
  email     String   
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now())

  @@map("password_resets")
}